(()=>{"use strict";(()=>{class e{constructor(e){this.gameFieldSize=e}init(){this.generateInfoField(),this.renderInfoFieldToDom()}generateInfoField(){const e=document.createElement("div");return e.classList.add("info"),e.style.width=this.gameFieldSize+60+"px",e.innerHTML='<div class="info__time">\n                                    <span>Time</span>\n                                    <span>00:00:00</span>\n                                </div>\n                                <div class="info__moves">\n                                    <span>Moves</span>\n                                    <span>0</span>\n                                </div>\n                                <button class="info__menu-button">Pause game</button>',e}renderInfoFieldToDom(){const e=document.querySelector(".game-container");e.insertBefore(this.generateInfoField(this.gameFieldSize),e.childNodes[0])}}class t{constructor(){this.gameField=""}init(t){new e(t).init();const s=document.querySelector(".game-container");s.insertBefore(this.generateGameField(t),s.childNodes[1])}generateGameField(e){this.gameField=document.createElement("div"),this.gameField.classList.add("game-field");const t=document.createElement("div");return t.classList.add("game-field-with-border"),t.style.width=e+60+"px",t.style.height=e+60+"px",t.append(this.gameField),t}changeGameFieldSize(e){const t=document.querySelector(".game-field-with-border");t.style.width=e+60+"px",t.style.height=e+60+"px"}clearGameField(){this.gameField.querySelectorAll("[data-key]").forEach((e=>{e.remove()}))}}class s{generateTile(e,t,s,i){return this.tile=document.createElement("div"),this.tile.classList.add("tile",t?"tile_number":"tile_empty"),this.tile.style.width=e+"px",this.tile.style.height=e+"px",this.tile.style.top=i*e+"px",this.tile.style.left=s*e+"px",0!==t&&(this.tile.textContent=t),this.tile.dataset.key=t,this.tile.dataset.top=i,this.tile.dataset.left=s,this.tile}renderTilesToDom(e,t,s){const i=document.querySelector(".game-field");for(let n=0;n<e;n++)for(let a=0;a<e;a++)i.append(this.generateTile(s,t[a][n],n,a))}changeTilesSize(e){document.querySelectorAll(".tile").forEach((t=>{let s=t.dataset.top,i=t.dataset.left;t.style.width=e+"px",t.style.height=e+"px",t.style.top=s*e+"px",t.style.left=i*e+"px"}))}}class i{constructor(e,t,i){this.tilesSize=null,this.updateMovesField=e,this.checkIsWin=t,this.soundMoveTile=i,this.tilesArr=[],this.moveHistory=[],this.infoField=null,this.tileView=new s}init(e,t,s,i=!1){return this.tilesSize=t,this.tilesArr=[],this.generateTilesArr(e),this.shuffleTilesArr(e),this.loadTiles(e,this.tilesArr,t),s&&this.generateImageToTiles(e,i),this.tilesArr}loadTiles(e,t,s){this.tilesSize=s,this.tileView.renderTilesToDom(e,t,s)}changeTilesSize(e){this.tilesSize=e,this.tileView.changeTilesSize(e)}clearTilesFromImage(){const e=document.querySelectorAll(".tile");let t=0;e.forEach((e=>{t=Number(e.dataset.key),t>0&&(e.style.backgroundImage="url('assets/tile-img.jpg')",e.style.backgroundSize="none",e.style.color="rgba(48, 28, 12, 0.7)")}))}generateImageNumber(){return Math.floor(150*Math.random())+1}generateImageToTiles(e,t=!1){let s=document.createElement("canvas"),i=s.getContext("2d"),n=[],a=new Image;a.onload=function(){let t=a.width/e,o=a.height/e;for(let a=0;a<e*e;a++){let l=a%e==0?0:-t*a%(t*e),r=-o*Math.floor(a/e);s.width=t,s.height=o,i.drawImage(this,l,r,t*e,o*e),n.push(s.toDataURL())}const l=document.querySelectorAll(".tile");let r=0;l.forEach((e=>{r=Number(e.dataset.key)-1,r>=0&&(e.style.color="transparent",e.style.backgroundColor="transparent",e.style.backgroundImage=`url(${n[r]})`,e.style.backgroundSize="cover")}))},t||(t=this.generateImageNumber()),a.src=`assets/images/${t}.jpg`}bindTileListeners(e){0!=e.dataset.key&&(e.onmousedown=t=>{if(1!=t.which)return;const s=t.pageX,i=t.pageY;let n=null,a=!0,o=t.clientX-e.getBoundingClientRect().left,l=t.clientY-e.getBoundingClientRect().top;function r(t,s){e.style.left=t-o+"px",e.style.top=s-l+"px"}function d(t){a=!1,r(t.pageX,t.pageY),e.style.visibility="hidden";let s=document.elementFromPoint(t.clientX,t.clientY);if(e.style.visibility="visible",!s)return;let i=s.closest('[data-key="0"]');n!=i?(n&&(a=!1),n=i,n&&(a=!0)):null!==n&&null!==i&&(a=!0)}e.style.zIndex=5,document.body.append(e),r(t.pageX,t.pageY),document.addEventListener("mousemove",d),e.onmouseup=t=>{Math.abs(t.pageX-s)<10&&Math.abs(t.pageY-i)<10&&(a=!0),document.removeEventListener("mousemove",d),document.querySelector(".game-field").append(e),e.onmouseup=null,this.moveTile(e,a),e.style.zIndex=4},e.ondragstart=function(){return!1}})}moveTile(e,t=!0,s=!1){const i=document.querySelector('[data-key="0"]');if(Math.abs(i.dataset.top-e.dataset.top)>1||Math.abs(i.dataset.left-e.dataset.left)>1||0!==Math.abs(i.dataset.top-e.dataset.top)&&0!==Math.abs(i.dataset.left-e.dataset.left)||!t)return i.style.top=i.dataset.top*this.tilesSize+"px",i.style.left=i.dataset.left*this.tilesSize+"px",e.style.top=e.dataset.top*this.tilesSize+"px",void(e.style.left=e.dataset.left*this.tilesSize+"px");this.soundMoveTile();const n=e.dataset.top,a=e.dataset.left,o=i.dataset.top,l=i.dataset.left;let r=null;0==s&&(n-o>0?r=3:n-o<0?r=1:a-l>0?r=2:a-l<0&&(r=4),this.moveHistory.push(r)),this.tilesArr[i.dataset.top][i.dataset.left]=this.tilesArr[e.dataset.top][e.dataset.left],this.tilesArr[e.dataset.top][e.dataset.left]=0;const d=document.querySelector(".game-field-with-border");let c=null,m=null,u=null;0==s?(c=e.offsetTop-d.offsetTop-30+"px",m=e.offsetLeft-d.offsetLeft-30+"px",u=300):(c=e.dataset.top*this.tilesSize+"px",m=e.dataset.left*this.tilesSize+"px",u=100),e.style.top=Number(o)*this.tilesSize+"px",e.style.left=Number(l)*this.tilesSize+"px",e.dataset.top=o,e.dataset.left=l,e.animate([{top:c,left:m},{top:Number(o)*this.tilesSize+"px",left:Number(l)*this.tilesSize+"px"}],{duration:u,animationFillMode:"forward"}),i.style.top=Number(n)*this.tilesSize+"px",i.style.left=Number(a)*this.tilesSize+"px",i.dataset.top=n,i.dataset.left=a,i.style.background="transparent",this.updateMovesField(),this.checkIsWin()}generateTilesArr(e){let t=[],s=0;for(let i=0;i<e;i++){t=[];for(let n=0;n<e;n++)s=n+i*e+1,s=s>e**2-1?0:s,t.push(s);this.tilesArr.push(t)}}shuffleTilesArr(e){let t;this.moveHistory=[],t=3==e?50:4==e?140:e**2*25;let s={},i=null;this.tilesArr.forEach(((e,t)=>{e.forEach(((e,i)=>{0==e&&(s.top=t,s.left=i)}))}));let n=1;for(let a=0;a<t;a++){if(n=Math.floor(4*Math.random())+1,1==i&&3==n||3==i&&1==n?n=s.left<1?4:2*(Math.floor(2*Math.random())+1):(2==i&&4==n||4==i&&2==n)&&(n=s.top<1?3:1+2*Math.floor(2*Math.random())),i==n)switch(n){case 1:n=s.top<1?2:1;break;case 2:n=s.left>=e-1?1:2;break;case 3:n=s.top>=e-1?2:3;break;case 4:n=s.left<1?1:4}switch(n){case 1:n=s.top<1?3:1;break;case 2:n=s.left>=e-1?4:2;break;case 3:n=s.top>=e-1?1:3;break;case 4:n=s.left<1?2:4}switch(n){case 1:this.tilesArr[s.top][s.left]=this.tilesArr[s.top-1][s.left],this.tilesArr[s.top-1][s.left]=0,s.top=s.top-1;break;case 2:this.tilesArr[s.top][s.left]=this.tilesArr[s.top][s.left+1],this.tilesArr[s.top][s.left+1]=0,s.left=s.left+1;break;case 3:this.tilesArr[s.top][s.left]=this.tilesArr[s.top+1][s.left],this.tilesArr[s.top+1][s.left]=0,s.top=s.top+1;break;case 4:this.tilesArr[s.top][s.left]=this.tilesArr[s.top][s.left-1],this.tilesArr[s.top][s.left-1]=0,s.left=s.left-1}this.moveHistory.push(n),i=n}}async autocompleteGame(e){this.tilesArr=e;let t,s,i,n,a={top:null,left:null};this.tilesArr.forEach(((e,t)=>{e.forEach(((e,s)=>{0==e&&(a.top=t,a.left=s)}))}));const o=document.querySelector(".info");for(let e=this.moveHistory.length-1;e>=0;e--){if(o.classList.contains("active"))return;switch(t=this.moveHistory.pop(),t){case 1:i=a.top+1,a.top=a.top+1,n=a.left;break;case 2:n=a.left-1,a.left=a.left-1,i=a.top;break;case 3:i=a.top-1,a.top=a.top-1,n=a.left;break;case 4:n=a.left+1,a.left=a.left+1,i=a.top}s=document.querySelector(`[data-key="${this.tilesArr[i][n]}"]`),await new Promise((e=>{this.moveTile(s,!0,!0),setTimeout(e,120)}))}}isHasSolution(){let e=0,t=[];this.tilesArr.forEach((e=>{t.push(...e)}));let s=this.tilesArr.length;return t.forEach(((i,n)=>{if(0!=i)t.slice(n).forEach((t=>{i>t&&0!=t&&(e+=1)}));else{let t=Math.ceil((n+1)/s);e+=t}})),e%2==0}}class n{constructor(e){this.soundMenu=e,this.time=1,this.timer=null,this.moves=1}init(){this.startTimer(),this.updateMovesField(),document.querySelector(".info__menu-button").addEventListener("click",(e=>{this.toggleMenu(e.target),this.soundMenu()}))}changeInfoFieldSize(e){document.querySelector(".info").style.width=e+60+"px"}toggleMenu(e){const t=document.querySelector(".info");t.classList.toggle("active"),/active/.test(t.classList)?(e.innerText="Resume game",this.pauseTimer()):(e.innerText="Pause game",this.startTimer(),document.getElementById("save").classList.remove("disabled"))}updateMovesField(e=0){document.querySelector(".info__moves").lastElementChild.innerText=e}updateTimerField(e){document.querySelector(".info__time").lastElementChild.innerText=this.createTime(e)}createTime(e){const t=Math.trunc(e/60/60%60),s=Math.trunc(e/60%60),i=e%60;return`${t>9?t:"0"+t}:${s>9?s:"0"+s}:${i>9?i:"0"+i}`}startTimer(){this.timer=setInterval((()=>{this.updateTimerField(this.time),this.time++}),1e3)}pauseTimer(){clearInterval(this.timer)}startSavedTimer(e){clearInterval(this.timer);const t=e.split(":");this.time=Number(60*t[0]*60+60*t[1]+t[2]),this.updateTimerField(this.time)}stopTimer(e=1){clearInterval(this.timer),this.time=e,this.updateTimerField(e)}}class a{constructor(){}getSavedGames(){return JSON.parse(localStorage.getItem("savedGames"))||[]}getSavedGame(e){return JSON.parse(localStorage.getItem("savedGames")).filter((t=>t.id==e))}saveGame(e,t,s,i,n){const a=this.getSavedGames();let o={id:a.length?a.length:0,field:JSON.stringify(e),time:t,moves:s,imgNum:i,moveHistory:JSON.stringify(n)};a.push(o),localStorage.setItem("savedGames",JSON.stringify(a))}getBestScores(){return(JSON.parse(localStorage.getItem("bestScores"))||[]).slice(0,10)}saveBestScore(e,t,s,i){const n=this.getBestScores();let a={date:e,moves:t,size:`${s}x${s}`,time:i};n.push(a),n.sort(((e,t)=>e.time-t.time)),n.sort(((e,t)=>e.moves-t.moves)),n.slice(0,10),localStorage.setItem("bestScores",JSON.stringify(n))}}class o{constructor(e){this.soundTick=e}init(){this.renderMenuToDom()}changeActiveMenu(e){document.querySelector(".menu").childNodes.forEach((e=>{e.classList.remove("menu_active"),e.classList.add("menu_hidden")}));const t=document.querySelector(e);t.classList.toggle("menu_active"),t.classList.toggle("menu_hidden")}generateGoBackButton(){let e=document.createElement("button");return e.classList.add("menu__go-back-button"),e.innerText="go back",e.addEventListener("click",(()=>{this.soundTick(),this.changeActiveMenu(".menu__list")})),e}generateSavedGameNotification(){const e=document.createElement("div");return e.classList.add("menu__notification","hide"),e.innerText="The game was successfully saved!",e}showSavedGameNotification(){const e=document.querySelector(".menu__notification");e.classList.remove("hide"),setTimeout((()=>{e.classList.add("hide")}),2500),document.getElementById("save").classList.add("disabled")}generateMenuView(){let e=document.createElement("div");return e.classList.add("menu"),e}generateMenuListView(){const e=document.createElement("ul");return e.classList.add("menu__list","menu_active"),e.append(this.generateSavedGameNotification()),e.innerHTML+='<li id="save">Save Game</li>\n                                <li id="new-game">New Game</li>\n                                <li id="saved-games">Saved Games</li>\n                                <li id="best-scores">Best scores</li>\n                                <li id="settings">Settings</li>\n                                <li id="autocomplete">Autocomplete Game</li>',e}generateSavedGamesView(){const e=document.createElement("div");e.classList.add("saved-games","menu_hidden"),e.innerHTML='<div class="saved-games__header">\n                                        <div class="carousel__arrow carousel__arrow_left">\n                                            <span class="material-icons">arrow_back_ios</span>\n                                        </div>\n                                        <h2>Saved games</h2>\n                                        <div class="carousel__arrow carousel__arrow_right">\n                                            <span class="material-icons">arrow_forward_ios</span>\n                                        </div>\n                                    </div>\n                                    <div class="carousel"></div>';const t=document.createElement("div");return t.classList.add("saved-games__notification"),t.innerText="You don't have any saved games yet",e.append(t),e.append(this.generateGoBackButton()),e}updateSavedGamesView(e,t=!1){let s="";const i=document.querySelector(".carousel__arrow_left"),n=document.querySelector(".carousel__arrow_right");if(t)document.querySelector(".saved-games__notification").style.display="block",i.style.display="none",n.style.display="none";else{document.querySelector(".saved-games__notification").style.display="none",i.style.display="block",n.style.display="block";const t=document.querySelector(".carousel");t.style.left="0",t.style.width=100*e.length+"%",e.forEach((e=>{s+=`<div class="carousel__item">${this.generateSavedGameView(e)}</div>`})),t.innerHTML=""+s}}generateSavedGameView(e){let t="";return e.imgNum?t=`<img width='120px' src='assets/images/${e.imgNum}.jpg'>`:JSON.parse(e.field).forEach((e=>{let s="";e.forEach((e=>{s+=`<div class="carousel__field__row-item">${e}</div>`})),t+=`<div class="carousel__field__row">${s}</div>`})),`<div class="carousel__field">${t}</div>\n                            <div class="carousel__info">\n                                <div><span>Field size: </span>${JSON.parse(e.field).length}x${JSON.parse(e.field).length}</span></div>\n                                <div><span>Time:</span> <span>${e.time}</span></div>\n                                <div>Moves:</span> <span>${e.moves}</span></div>\n                                <button class="menu__button-load" id="${e.id}">Load game</button>\n                            </div>`}generateBestScoresView(){const e=document.createElement("div");return e.classList.add("menu__best-scores","menu_hidden"),e.innerHTML="<h2>Best Scores</h2>",e.append(this.generateGoBackButton()),e}updateBestScoresView(e){let t=document.querySelector(".best-scores");t&&t.remove(),document.querySelector(".menu__best-scores").append(this.generateBestScoresList()),e&&(t=document.querySelector(".best-scores"),e.forEach((e=>{this.generateBestScoreItemView(e).forEach(((e,s)=>{t.children[s].append(e)}))})))}generateBestScoresList(){const e=document.createElement("div");return e.classList.add("best-scores"),e.innerHTML='<div class="best-scores__date">\n                                            <div class="best-scores__title">Date</div>\n                                    </div>\n                                    <div class="best-scores__moves">\n                                        <div class="best-scores__title">Moves</div>\n                                    </div>\n                                    <div class="best-scores__size">\n                                        <div class="best-scores__title">Size</div>\n                                    </div>\n                                    <div class="best-scores__time">\n                                        <div class="best-scores__title">Time</div>\n                                    </div>',e}generateBestScoreItemView(e){const t=document.createElement("div");t.classList.add("best-scores__item"),t.innerText=""+e.date;const s=document.createElement("div");s.classList.add("best-scores__item"),s.innerText=""+e.moves;const i=document.createElement("div");i.classList.add("best-scores__item"),i.innerText=""+e.size;const n=document.createElement("div");return n.classList.add("best-scores__item"),n.innerText=""+e.time,new Array(t,s,i,n)}generateWinView(){let e=document.createElement("div");return e.classList.add("menu__win","menu_hidden"),e}updateWinView(e="",t=""){const s=document.querySelector(".menu__win");s.innerHTML=`<div>Hurray! You solved the puzzle for<br><span>${e}</span> and <span>${t}</span> moves</div>`,s.append(this.generateGoBackButton())}generateSettingsView(){let e=document.createElement("div");return e.classList.add("settings","menu_hidden"),e.innerHTML='<div class="settings__container">\n                                    <div class="settings__size">\n                                    <label for="field-size">Choose the field size:</label>\n                                        <select name="field-size" id="field-size">\n                                            <option value="3">3х3</option>\n                                            <option selected="selected" value="4">4х4</option>\n                                            <option value="5">5х5</option>\n                                            <option value="6">6х6</option>\n                                            <option value="7">7х7</option>\n                                            <option value="8">8х8</option>\n                                        </select>\n                                    </div>\n                                    <div class="settings__mode">\n                                        <label for="mode">Set the game mode:</label>\n                                        <select name="mode" id="mode">\n                                            <option selected="selected" value="no">numbers</option>\n                                            <option value="yes">image</option>\n                                        </select>\n                                    </div>\n                                    <span class="material-icons settings__sound">\n                                        volume_up\n                                    </span>\n                                </div>',e.append(this.generateGoBackButton()),e}renderMenuToDom(e,t,s,i,n){const a=document.querySelector(".game-field-with-border"),o=this.generateMenuView();o.append(e),o.append(t),o.append(s),o.append(i),o.append(n),a.append(o)}}class l{constructor(e,t,s,i,n,l,r,d,c,m){this.data=new a,this.startNewGame=t,this.saveGameCallback=e,this.toggleTilesImageBg=n,this.toggleMenu=l,this.autocompleteGame=r,this.toggleSound=d,this.loadSavedGame=s,this.soundTick=c,this.soundStartGame=m,this.changeTilesQuantity=i,this.menuView=new o((()=>this.soundTick()))}saveGame(e,t,s,i,n){this.data.saveGame(e,t,s,i,n),this.menuView.showSavedGameNotification()}getSavedGames(){return this.data.getSavedGames()}showSavedGames(){const e=this.getSavedGames();if(this.menuView.changeActiveMenu(".saved-games"),e.length){this.menuView.updateSavedGamesView(e);const t=document.querySelector(".carousel"),s=document.querySelector(".carousel__item"),i=e.length;let n=0;const a=document.querySelector(".carousel__arrow_left"),o=document.querySelector(".carousel__arrow_right");a.addEventListener("click",(()=>{if(n<0){n++;const e=s.offsetWidth;t.style.left=n*e+"px",this.soundTick()}})),o.addEventListener("click",(()=>{if(n>-(i-1)){n--;const e=s.offsetWidth;t.style.left=n*e+"px",this.soundTick()}}))}else this.menuView.updateSavedGamesView(null,!0);document.querySelectorAll(".menu__button-load").forEach((t=>{t.addEventListener("click",(()=>{for(let s=0;s<e.length;s++)e[s].id==t.id&&(this.soundStartGame(),this.loadSavedGame(e[s]))}))}))}showBestScores(){this.menuView.changeActiveMenu(".menu__best-scores")}updateBestScores(e){this.menuView.updateBestScoresView(e)}showWinInfo(e,t){this.menuView.updateWinView(e,t),this.menuView.changeActiveMenu(".menu__win")}createMenu(){const e=this.menuView.generateMenuListView();e.childNodes.forEach((e=>{this.bindMenuItemListeners(e)}));const t=this.menuView.generateSavedGamesView(),s=this.menuView.generateBestScoresView(),i=this.menuView.generateWinView(),n=this.menuView.generateSettingsView();n.firstChild.children[0].children[1].addEventListener("change",(e=>{this.changeTilesQuantity(e.target.value),this.startNewGame()})),n.firstChild.children[1].children[1].addEventListener("change",(e=>{this.toggleTilesImageBg("yes"===e.target.value)})),n.firstChild.children[2].addEventListener("click",(e=>{this.toggleSound(),"volume_off"==e.target.innerText?e.target.innerText="volume_up":e.target.innerText="volume_off"})),this.menuView.renderMenuToDom(e,t,s,i,n)}showSettings(){this.menuView.changeActiveMenu(".settings")}changeSettings(e,t){document.getElementById("field-size").selectedIndex=""+(e-3);document.getElementById("mode").selectedIndex=t?"1":"0"}bindMenuItemListeners(e){e.addEventListener("click",(()=>{switch(e.id){case"save":this.soundTick(),this.saveGameCallback();break;case"new-game":this.soundStartGame(),this.startNewGame(),this.toggleMenu();break;case"saved-games":this.soundTick(),this.showSavedGames();break;case"best-scores":this.soundTick(),this.showBestScores();break;case"settings":this.soundTick(),this.showSettings();break;case"autocomplete":this.soundTick(),this.toggleMenu(),this.autocompleteGame()}}))}}const r=new Audio("./assets/sounds/tile-move.mp3");r.dataset.sound="main";const d=new Audio("./assets/sounds/start-game.mp3");d.dataset.sound="start-game";const c=new Audio("./assets/sounds/tick.mp3");c.dataset.sound="tick";const m=new Audio("./assets/sounds/menu.mp3");m.dataset.sound="menu";const u=new Audio("./assets/sounds/win.mp3");u.dataset.sound="win";const h={mainSound:r,startGame:d,tickSound:c,menuSound:m,winSound:u},p=document.createElement("div");p.classList.add("descript"),p.innerHTML='Меню открывается при нажатии на "Pause game"<br>\n                   Игра сохраняется только в том случае, если нажать на "Save Game"<br>\n                   <span class="descript__ico material-icons">local_florist</span>';const g=p;window.onload=()=>{const e=new a;let s=e.getSavedGames(),o=e.getBestScores(),r=4,d=400,c=d/r,m=!1,u=!1,p=!0,v=!1,f=L();const S=document.createElement("div");S.classList.add("game-container"),document.body.insertBefore(S,document.body.childNodes[0]);const _=new t;_.init(d),document.body.append(g);const y=new i((()=>{b.updateMovesField(b.moves++)}),(()=>{!function(){if(u=f===y.tilesArr.map((e=>e.join("-"))).join("-"),u){const t=document.querySelector(".info__time").lastElementChild.textContent,s=document.querySelector(".info__moves").lastElementChild.textContent;w.showWinInfo(t,s),p&&(h.winSound.currentTime=0,h.winSound.play()),setTimeout((()=>{b.toggleMenu(T)}),500),function(t,s){const i=new Date;let n=i.getDate(),a=i.getMonth()+1,o=i.getFullYear();n=n>9?n:"0"+n,a=a>9?a:"0"+a,e.saveBestScore(`${n}/${a}/${o}`,s,y.tilesArr.length,t)}(t,s),o=e.getBestScores(),w.updateBestScores(o)}}()}),(()=>{p&&(h.mainSound.currentTime=0,h.mainSound.play())}));y.init(r,c,m),E();const w=new l((()=>{!function(){const e=document.querySelector(".info__time").lastElementChild.textContent,t=document.querySelector(".info__moves").lastElementChild.textContent;w.saveGame(y.tilesArr,e,t,v,y.moveHistory)}()}),(()=>{c=d/r,b.stopTimer(),b.moves=1,b.updateMovesField(0),_.clearGameField(),m&&(v=y.generateImageNumber()),y.init(r,c,m,v),E()}),(e=>{!function(e){b.startSavedTimer(e.time),b.moves=e.moves+1,b.updateMovesField(e.moves),b.toggleMenu(T),_.clearGameField(),y.tilesArr=JSON.parse(e.field),r=y.tilesArr.length,c=d/r,y.moveHistory=JSON.parse(e.moveHistory),y.loadTiles(r,y.tilesArr,c),e.imgNum?(v=e.imgNum,m=!0,y.generateImageToTiles(r,v)):(m=!1,v=!1),E(),w.changeSettings(r,m),f=L()}(e)}),(e=>{!function(e){r=Number(e),c=d/r,f=L()}(e)}),(e=>{!function(e){m=e,m?(v=y.generateImageNumber(),y.generateImageToTiles(r,v)):(y.clearTilesFromImage(),v=!1)}(e)}),(()=>{b.toggleMenu(T)}),(()=>{y.autocompleteGame(y.tilesArr)}),(()=>{p=!p}),(()=>{p&&(h.tickSound.currentTime=0,h.tickSound.play())}),(()=>{p&&(h.startGame.currentTime=0,h.startGame.play())}));w.createMenu(),o&&w.updateBestScores(o);const b=new n((()=>{p&&(h.menuSound.currentTime=0,h.menuSound.play())}));b.init();const T=document.querySelector(".info__menu-button");function k(){document.body.clientWidth<485?(d=document.body.clientWidth-85,M()):400!==d&&(d=400,M())}function M(){c=d/r,_.changeGameFieldSize(d),y.changeTilesSize(c),b.changeInfoFieldSize(d)}function L(){let e="";for(let t=1;t<=r*r-1;t++)e+=t+"-";return e+="0",e}function E(){document.querySelectorAll("[data-key]").forEach((e=>{y.bindTileListeners(e)}))}s.length&&(b.toggleMenu(T),w.showSavedGames()),k(),window.onresize=()=>{k()}}})()})();